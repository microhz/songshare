<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micro.ss.web.data.mapper.MusicInfoMapper" >
  <resultMap id="BaseResultMap" type="com.micro.ss.web.data.model.MusicInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="singer" property="singer" jdbcType="VARCHAR" />
    <result column="singer_album" property="singerAlbum" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="lyrics_id" property="lyricsId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="ext" property="ext" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, user_id, singer, singer_album, file_url, comment, lyrics_id, create_time, 
    status, ext
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.micro.ss.web.data.model.MusicInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="limitSelectByExample" resultMap="BaseResultMap" parameterType="com.micro.ss.web.data.model.MusicInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from music_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start != null AND end != null">
    	limit start,end
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from music_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from music_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.micro.ss.web.data.model.MusicInfoExample" >
    delete from music_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.micro.ss.web.data.model.MusicInfo" >
    insert into music_info (id, name, user_id, 
      singer, singer_album, file_url, 
      comment, lyrics_id, create_time, 
      status, ext)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{singer,jdbcType=VARCHAR}, #{singerAlbum,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{lyricsId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{ext,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.micro.ss.web.data.model.MusicInfo" >
    insert into music_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="singer != null" >
        singer,
      </if>
      <if test="singerAlbum != null" >
        singer_album,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="lyricsId != null" >
        lyrics_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="ext != null" >
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="singer != null" >
        #{singer,jdbcType=VARCHAR},
      </if>
      <if test="singerAlbum != null" >
        #{singerAlbum,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="lyricsId != null" >
        #{lyricsId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="ext != null" >
        #{ext,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.micro.ss.web.data.model.MusicInfoExample" resultType="java.lang.Integer" >
    select count(*) from music_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update music_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.singer != null" >
        singer = #{record.singer,jdbcType=VARCHAR},
      </if>
      <if test="record.singerAlbum != null" >
        singer_album = #{record.singerAlbum,jdbcType=VARCHAR},
      </if>
      <if test="record.fileUrl != null" >
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.lyricsId != null" >
        lyrics_id = #{record.lyricsId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.ext != null" >
        ext = #{record.ext,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update music_info
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      singer = #{record.singer,jdbcType=VARCHAR},
      singer_album = #{record.singerAlbum,jdbcType=VARCHAR},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      lyrics_id = #{record.lyricsId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      ext = #{record.ext,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.micro.ss.web.data.model.MusicInfo" >
    update music_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="singer != null" >
        singer = #{singer,jdbcType=VARCHAR},
      </if>
      <if test="singerAlbum != null" >
        singer_album = #{singerAlbum,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="lyricsId != null" >
        lyrics_id = #{lyricsId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="ext != null" >
        ext = #{ext,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.micro.ss.web.data.model.MusicInfo" >
    update music_info
    set name = #{name,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      singer = #{singer,jdbcType=VARCHAR},
      singer_album = #{singerAlbum,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      lyrics_id = #{lyricsId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      ext = #{ext,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>